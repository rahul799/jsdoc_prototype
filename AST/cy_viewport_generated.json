[
    {
        "name": "cy.container",
        "descr": "Get the HTML DOM element in which the graph is visualised. A null value is returned if the instance is headless."
    },
    {
        "name": "cy.center",
        "pureAliases": [
            "cy.centre"
        ],
        "descr": "Pan the graph to the centre of a collection.",
        "formats": [
            {
                "descr": "Centre on all elements in the graph."
            },
            {
                "descr": "Centre on the specified elements.",
                "args": [
                    {
                        "name": "eles",
                        "descr": "The collection to centre upon."
                    }
                ]
            }
        ]
    },
    {
        "name": "cy.fit",
        "descr": "Pan and zooms the graph to fit to a collection.",
        "formats": [
            {
                "descr": "Fit to all elements in the graph."
            },
            {
                "descr": "Fit to the specified elements.",
                "args": [
                    {
                        "name": "eles",
                        "descr": "The collection to fit to."
                    },
                    {
                        "name": "padding",
                        "descr": "An amount of padding (in rendered pixels) to have around the graph (default 0)."
                    }
                ]
            }
        ]
    },
    {
        "name": "cy.reset",
        "descr": "Reset the graph to the default zoom level and panning position."
    },
    {
        "name": "cy.pan",
        "descr": "Get or set the panning position of the graph.",
        "formats": [
            {
                "descr": "Get the current panning position."
            },
            {
                "descr": "Set the current panning position.",
                "args": [
                    {
                        "name": "renderedPosition",
                        "descr": "The rendered position to pan the graph to."
                    }
                ]
            }
        ]
    },
    {
        "name": "cy.panBy",
        "descr": "Relatively pan the graph by a specified rendered position vector.",
        "formats": [
            {
                "descr": "The rendered position",
                "args": [
                    {
                        "name": "renderedPosition",
                        "descr": "The rendered position vector to pan the graph by."
                    }
                ]
            }
        ]
    },
    {
        "name": "cy.panningEnabled",
        "descr": "Get or set whether panning is enabled.",
        "formats": [
            {
                "descr": "Get whether panning is enabled."
            },
            {
                "descr": "Set whether panning is enabled",
                "args": [
                    {
                        "name": "bool",
                        "descr": "A truthy value enables panning; a falsey value disables it."
                    }
                ]
            }
        ]
    },
    {
        "name": "cy.userPanningEnabled",
        "descr": "Get or set whether panning by user events (e.g. dragging the graph background) is enabled.",
        "formats": [
            {
                "descr": "Get whether panning is enabled."
            },
            {
                "descr": "Set whether panning is enabled",
                "args": [
                    {
                        "name": "bool",
                        "descr": "A truthy value enables panning; a falsey value disables it."
                    }
                ]
            }
        ]
    },
    {
        "name": "cy.zoomingEnabled",
        "descr": "Get or set whether zooming is enabled.",
        "formats": [
            {
                "descr": "Get whether zooming is enabled."
            },
            {
                "descr": "Set whether zooming is enabled",
                "args": [
                    {
                        "name": "bool",
                        "descr": "A truthy value enables zooming; a falsey value disables it."
                    }
                ]
            }
        ]
    },
    {
        "name": "cy.userZoomingEnabled",
        "descr": "Get or set whether user zooming by user events (e.g. mouse wheel, pinch-to-zoom) is enabled.",
        "formats": [
            {
                "descr": "Get whether user zooming is enabled."
            },
            {
                "descr": "Set whether zooming is enabled",
                "args": [
                    {
                        "name": "bool",
                        "descr": "A truthy value enables user zooming; a falsey value disables it."
                    }
                ]
            }
        ]
    },
    {
        "name": "cy.minZoom",
        "descr": "Get or set the minimum zoom level.",
        "formats": [
            {
                "descr": "Get the minimum zoom level."
            },
            {
                "descr": "Set the minimum zoom level.",
                "args": [
                    {
                        "name": "zoom",
                        "descr": "The new minimum zoom level to use."
                    }
                ]
            }
        ]
    },
    {
        "name": "cy.maxZoom",
        "descr": "Get or set the maximum zoom level.",
        "formats": [
            {
                "descr": "Get the maximum zoom level."
            },
            {
                "descr": "Set the maximum zoom level.",
                "args": [
                    {
                        "name": "zoom",
                        "descr": "The new maximum zoom level to use."
                    }
                ]
            }
        ]
    },
    {
        "name": "cy.viewport",
        "descr": "Set the viewport state (pan & zoom) in one call.",
        "formats": [
            {
                "descr": "Set viewport",
                "args": [
                    {
                        "name": "zoom",
                        "descr": "The zoom level to set."
                    },
                    {
                        "name": "pan",
                        "descr": "The pan to set (a rendered position)."
                    }
                ]
            }
        ]
    },
    {
        "name": "cy.boxSelectionEnabled",
        "descr": "Get or set whether box selection is enabled. If enabled along with panning, the user must hold down one of shift, control, alt, or command to initiate box selection.",
        "formats": [
            {
                "descr": "Get whether box selection is enabled."
            },
            {
                "descr": "Set whether box selection is enabled.",
                "args": [
                    {
                        "name": "bool",
                        "descr": "A truthy value enables box selection; a falsey value disables it."
                    }
                ]
            }
        ]
    },
    {
        "name": "cy.selectionType",
        "descr": "Get or set the selection type.  The `'single'` selection type is the default, tapping an element selects that element and deselects the previous elements.  The `'additive' selection type toggles the selection state of an element when tapped.`",
        "formats": [
            {
                "descr": "Get the selection type string."
            },
            {
                "descr": "Set the selection type.",
                "args": [
                    {
                        "name": "type",
                        "descr": "The selection type string; one of `'single'` (default) or `'additive'`."
                    }
                ]
            }
        ]
    },
    {
        "name": "cy.width",
        "descr": "Get the on-screen width of the viewport in pixels."
    },
    {
        "name": "cy.height",
        "descr": "Get the on-screen height of the viewport in pixels."
    },
    {
        "name": "cy.extent",
        "descr": "Get the extent of the viewport, a bounding box in model co-ordinates that lets you know what model positions are visible in the viewport."
    },
    {
        "name": "cy.autolock",
        "descr": "Get or set whether nodes are automatically locked (i.e. if `true`, nodes are locked despite their individual state).",
        "formats": [
            {
                "descr": "Get whether autolocking is enabled."
            },
            {
                "descr": "Set whether autolocking is enabled.",
                "args": [
                    {
                        "name": "bool",
                        "descr": "A truthy value enables autolocking; a falsey value disables it."
                    }
                ]
            }
        ]
    },
    {
        "name": "cy.autoungrabify",
        "descr": "Get or set whether nodes are automatically ungrabified (i.e. if `true`, nodes are ungrabbale despite their individual state).",
        "formats": [
            {
                "descr": "Get whether autoungrabifying is enabled."
            },
            {
                "descr": "Set whether autoungrabifying is enabled.",
                "args": [
                    {
                        "name": "bool",
                        "descr": "A truthy value enables autoungrabifying; a falsey value disables it."
                    }
                ]
            }
        ]
    },
    {
        "name": "cy.autounselectify",
        "descr": "Get or set whether nodes are automatically unselectified (i.e. if `true`, nodes are ungrabbale despite their individual state).",
        "formats": [
            {
                "descr": "Get whether autounselectifying is enabled."
            },
            {
                "descr": "Set whether autounselectifying is enabled.",
                "args": [
                    {
                        "name": "bool",
                        "descr": "A truthy value enables autounselectifying; a falsey value disables it."
                    }
                ]
            }
        ]
    },
    {
        "name": "cy.resize",
        "pureAliases": [
            "cy,invalidateDimensions"
        ],
        "descr": "Force the renderer to recalculate the viewport bounds."
    }
]